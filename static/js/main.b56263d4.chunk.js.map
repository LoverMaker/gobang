{"version":3,"sources":["engine/ChessType.ts","engine/util/winUtils.ts","engine/ChessBoard.ts","engine/Game.ts","engine/player/Player.ts","engine/player/Computer.ts","component/Chessman.tsx","engine/player/Human.ts","component/Avatar.tsx","component/GameBoard.tsx","route/AppLayout.jsx","route/index.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["ChessType","FiveDirection","ChessBoard","board","Array","rowNum","colNum","this","i","row","j","push","EMPTY","type","col","checkPosition","GameState","isFive","totalCount","length","count","reset","HORIZONTAL","VERTICAL","x","y","RIGHT_SLANT","LEFT_SLANT","NONE","Player","isComputer","Object","classCallCheck","context","setChess","undo","Computer","possibleConstructorReturn","getPrototypeOf","call","console","log","Game","handler","chessBoard","gameState","NOT_STARTED","chessSteps","blackPlayer","whitePlayer","player","setContext","setType","BLACK","WHITE","NEXT_WHITE","NEXT_BLACK","STARTED","newBoard","onStart","onPause","play","getCurrentPlayer","_this","isSuccess","direction","position","winType","found","findFivePosition","getChessBoard","onOver","switchPlayer","onUpdate","setTimeout","checkComputerPlay","len","lastStep","dropChess","splice","Chessman","handleClick","e","preventDefault","stopPropagation","_this$props","props","isLast","size","marginTop","marginLeft","className","isLastClass","isFiveClass","react_default","a","createElement","concat","style","width","height","onClick","React","Component","Human","Avatar","right","justifyContent","text","white","alignItems","playerText","GameBoard","game","handleStartClick","humanFirst","setBlackPlayer","setWhitePlayer","start","isStarted","clientY","offsetTop","clientX","offsetLeft","clientWidth","offset","step","Math","floor","toast_default","info","assertThisInitialized","state","BLACK_WIN","success","WHITE_WIN","setState","_this2","chessMen","boardSize","min","document","body","item","Number","src_component_Chessman","key","src_component_Avatar","ref","button_default","inline","marginRight","disabled","AppLayout","renderContent","backgroundColor","textAlign","top","display","color","selectedTab","hidden","fullScreen","zIndex","tab_bar_default","unselectedTintColor","tintColor","barTintColor","Item","icon","background","selectedIcon","title","dot","selected","onPress","src_component_GameBoard","badge","data-seed","uri","AppRouter","react_router_dom","react_router","path","route_AppLayout","App","route","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b56263d4.chunk.js","sourcesContent":["enum ChessType {\r\n    EMPTY = 0,\r\n    BLACK = 1,\r\n    WHITE = 2\r\n}\r\n\r\nexport default ChessType","import ChessType from \"../ChessType\";\r\n\r\nenum FiveDirection {\r\n    // 无\r\n    NONE = 0,\r\n    // 水平\r\n    HORIZONTAL,\r\n    // 垂直\r\n    VERTICAL,\r\n    // 左斜\r\n    LEFT_SLANT,\r\n    // 右斜\r\n    RIGHT_SLANT\r\n}\r\n\r\ninterface Position {\r\n    row: number\r\n    col: number\r\n}\r\n\r\ninterface FivePosition {\r\n    found: boolean,\r\n    winType: ChessType\r\n    position: Position[]\r\n}\r\n\r\nconst isFive = function(board: number[][], type: ChessType, row: number, col: number): FiveDirection {\r\n    // 行列大小\r\n    const totalCount = board.length;\r\n    let count = 1;\r\n\r\n    const reset = () => count = 1\r\n\r\n    // [row, col]该点右边连珠数量\r\n    for(let i= col + 1; i < totalCount;i++) {\r\n        if (board[row][i] !== type) {\r\n            break\r\n        }\r\n        count += 1\r\n    }\r\n\r\n\r\n    // [row, col]该点左边连珠数量\r\n    for(let i = col - 1;i>= 0 ;i --) {\r\n        if (board[row][i] !== type) {\r\n            break\r\n        }\r\n        count ++;\r\n    }\r\n\r\n    if(count >= 5) return FiveDirection.HORIZONTAL;\r\n\r\n    //纵向\r\n    reset();\r\n    for(let i= row + 1;i < totalCount;i++) {\r\n        if (board[i][col] !== type) {\r\n            break\r\n        }\r\n        count ++;\r\n    }\r\n\r\n    for(let i = row - 1;i > 0;i--) {\r\n        if (board[i][col] !== type) {\r\n            break\r\n        }\r\n        count ++;\r\n    }\r\n\r\n    if(count >= 5) return FiveDirection.VERTICAL;\r\n    // 右斜方向 \\\\\r\n    reset();\r\n\r\n    for(let i=1;true;i++) {\r\n        const x = row + i, y = col + i;\r\n        if(x>= totalCount || y>= totalCount) {\r\n            break;\r\n        }\r\n        if (board[x][y] !== type) {\r\n            break\r\n        }\r\n        count ++;\r\n    }\r\n\r\n    for(let i=1;true;i++) {\r\n        const x = row - i, y = col - i;\r\n        if(x < 0 || y < 0) {\r\n            break;\r\n        }\r\n        if (board[x][y] !== type) {\r\n            break\r\n        }\r\n        count ++;\r\n    }\r\n\r\n    if(count >= 5) return FiveDirection.RIGHT_SLANT;\r\n\r\n    // 左斜方向 //\r\n    reset();\r\n\r\n    for(let i=1; true;i++) {\r\n        const x = row + i, y = col - i;\r\n        if( x < 0 || y < 0 || x >= totalCount || y >= totalCount) {\r\n            break;\r\n        }\r\n        if (board[x][y] !== type) {\r\n            break\r\n        }\r\n        count ++;\r\n    }\r\n\r\n    for(let i=1; true;i++) {\r\n        const x = row - i, y = col + i;\r\n        if( x < 0 || y < 0 || x >= totalCount || y >= totalCount) {\r\n            break;\r\n        }\r\n        if (board[x][y] !== type) {\r\n            break\r\n        }\r\n        count ++;\r\n    }\r\n\r\n    if(count >= 5) return FiveDirection.LEFT_SLANT;\r\n\r\n    return FiveDirection.NONE;\r\n\r\n}\r\n\r\n// 找到五子连珠的点\r\nconst findFivePosition = (board: number[][]): FivePosition => {\r\n    let direction = FiveDirection.NONE\r\n    let position = { row: -1, col: -1 }\r\n    let winType = ChessType.EMPTY\r\n    for(let i = 0;i < board.length;i++) {\r\n        for(let j = 0;j  <board[i].length;j++) {\r\n            const type = board[i][j]\r\n            position = { row: i, col: j }\r\n            if (type !== ChessType.EMPTY) {\r\n                direction = isFive(board, type, i, j)\r\n                if (direction !== FiveDirection.NONE) {\r\n                    winType = type\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (direction === FiveDirection.NONE) return { found: false, winType, position: [] };\r\n    if (direction === FiveDirection.HORIZONTAL) {\r\n        return {\r\n            found: true,\r\n            winType,\r\n            position: [\r\n                position,\r\n                {row: position.row, col: position.col + 1},\r\n                {row: position.row, col: position.col + 2},\r\n                {row: position.row, col: position.col + 3},\r\n                {row: position.row, col: position.col + 4}]\r\n        }\r\n    }\r\n    if (direction === FiveDirection.VERTICAL) {\r\n        return {\r\n            found: true,\r\n            winType,\r\n            position: [\r\n                position,\r\n                {row: position.row + 1, col: position.col},\r\n                {row: position.row + 2, col: position.col},\r\n                {row: position.row + 3, col: position.col},\r\n                {row: position.row + 4, col: position.col}]\r\n        }\r\n    }\r\n    if (direction === FiveDirection.RIGHT_SLANT) {\r\n        return {\r\n            found: true,\r\n            winType,\r\n            position: [\r\n                position,\r\n                {row: position.row + 1, col: position.col + 1},\r\n                {row: position.row + 2, col: position.col + 2},\r\n                {row: position.row + 3, col: position.col + 3},\r\n                {row: position.row + 4, col: position.col + 4}]\r\n        }\r\n    }\r\n    if (direction === FiveDirection.LEFT_SLANT) {\r\n        return {\r\n            found: true,\r\n            winType,\r\n            position: [\r\n                position,\r\n                {row: position.row + 1, col: position.col - 1},\r\n                {row: position.row + 2, col: position.col - 2},\r\n                {row: position.row + 3, col: position.col - 3},\r\n                {row: position.row + 4, col: position.col - 4}]\r\n        }\r\n    }\r\n    return { found: false, winType, position: [] }\r\n}\r\n\r\nexport { findFivePosition }","// 棋盘类\r\nimport ChessType from \"./ChessType\";\r\n\r\nclass ChessBoard {\r\n    board : Array<Array<number>> = new Array<Array<number>>()\r\n    rowNum: number = 15\r\n    colNum: number = 15\r\n\r\n    newBoard(): void {\r\n        this.board = []\r\n        for (let i = 0; i < this.rowNum; i++) {\r\n            const row = []\r\n            for (let j = 0; j < this.colNum; j++) {\r\n                row.push(ChessType.EMPTY)\r\n            }\r\n            this.board.push(row)\r\n        }\r\n    }\r\n\r\n    setChess(type: ChessType, row: number, col: number): boolean {\r\n        // 位置不合法\r\n        // 当前位置不为空\r\n        if (this.checkPosition(row, col) === false || this.board[row][col] !== ChessType.EMPTY) {\r\n            return false\r\n        }\r\n        this.board[row][col] = type\r\n        return true\r\n    }\r\n\r\n    dropChess(type: ChessType, row: number, col: number): boolean {\r\n        // 位置不合法\r\n        // 当前位置不为空\r\n        if (this.checkPosition(row, col) === false || this.board[row][col] !== type) {\r\n            return false\r\n        }\r\n        this.board[row][col] = ChessType.EMPTY\r\n        return true\r\n    }\r\n\r\n    checkPosition(row: number, col: number) {\r\n        // 位置不合法\r\n        return !(row < 0 || row > this.rowNum || col < 0 || col > this.colNum)\r\n    }\r\n}\r\n\r\nexport default ChessBoard","import ChessBoard from \"./ChessBoard\";\r\nimport ChessType from \"./ChessType\";\r\nimport Player from \"./player/Player\";\r\nimport GameContext from \"./GameContext\";\r\nimport {findFivePosition} from \"./util/winUtils\";\r\nimport GameHandler from \"./GameHandler\";\r\nimport {Computer} from \"./player/Computer\";\r\n\r\nenum GameState {\r\n    NOT_STARTED,\r\n    STARTED,\r\n    PAUSE,\r\n    NEXT_WHITE,\r\n    NEXT_BLACK,\r\n    BLACK_WIN,\r\n    WHITE_WIN,\r\n    OVER\r\n}\r\n\r\ninterface ChessStep {\r\n    type: ChessType,\r\n    row: number,\r\n    col: number\r\n}\r\n\r\nclass Game implements GameContext {\r\n    chessBoard: ChessBoard = new ChessBoard()\r\n    gameState: GameState = GameState.NOT_STARTED\r\n    chessSteps: ChessStep[] = []\r\n\r\n    blackPlayer!: Player\r\n    whitePlayer!: Player\r\n    handler: GameHandler\r\n\r\n    constructor(handler: GameHandler) {\r\n        this.handler = handler\r\n    }\r\n\r\n    getChessBoard(): number[][] {\r\n        return this.chessBoard.board\r\n    }\r\n\r\n    getChessSteps(): ChessStep[] {\r\n        return this.chessSteps\r\n    }\r\n\r\n    setBlackPlayer(player: Player) {\r\n        player.setContext(this)\r\n        player.setType(ChessType.BLACK)\r\n        this.blackPlayer = player\r\n    }\r\n\r\n    setWhitePlayer(player: Player) {\r\n        player.setContext(this)\r\n        player.setType(ChessType.WHITE)\r\n        this.whitePlayer = player\r\n    }\r\n\r\n    getCurrentPlayer(): Player| null {\r\n        if (this.gameState === GameState.NEXT_WHITE) {\r\n            return this.whitePlayer\r\n        }\r\n        if (this.gameState === GameState.NEXT_BLACK) {\r\n            return this.blackPlayer\r\n        }\r\n        return null\r\n    }\r\n\r\n    // 开始游戏, 黑棋先手\r\n    start() {\r\n        this.gameState = GameState.STARTED\r\n        this.chessBoard.newBoard()\r\n        this.gameState = GameState.NEXT_BLACK\r\n        if (this.handler.onStart) {\r\n            this.handler.onStart(this.gameState)\r\n        }\r\n    }\r\n    // 暂停游戏\r\n    pause() {\r\n        if (this.handler.onPause) {\r\n            this.handler.onPause(this.gameState)\r\n        }\r\n    }\r\n\r\n    stop() {\r\n\r\n    }\r\n\r\n    switchPlayer() {\r\n        if (this.gameState === GameState.NEXT_BLACK) {\r\n            this.gameState = GameState.NEXT_WHITE\r\n            return\r\n        }\r\n        if (this.gameState === GameState.NEXT_WHITE) {\r\n            this.gameState = GameState.NEXT_BLACK\r\n            return\r\n        }\r\n    }\r\n\r\n    checkComputerPlay(): void {\r\n        const play = this.getCurrentPlayer()\r\n        if (play instanceof Computer) {\r\n            play.play()\r\n        }\r\n    }\r\n\r\n    setChess(type: ChessType, row: number, col: number): boolean {\r\n        if ((this.gameState === GameState.NEXT_BLACK && type === ChessType.BLACK) || (this.gameState === GameState.NEXT_WHITE && type === ChessType.WHITE)) {\r\n            this.chessSteps.push({ type, row, col })\r\n            const isSuccess = this.chessBoard.setChess(type, row, col)\r\n            if (isSuccess) {\r\n                const fivePosition = findFivePosition(this.getChessBoard())\r\n                if (fivePosition.found) {\r\n                    this.handler.onOver(this.gameState)\r\n                }\r\n                this.switchPlayer()\r\n                this.handler.onUpdate(this.gameState)\r\n                setTimeout(() => this.checkComputerPlay(), 100)\r\n            }\r\n            return isSuccess\r\n        }\r\n        return false\r\n    }\r\n\r\n    undo(type: ChessType): boolean {\r\n        const len = this.chessSteps.length\r\n        const lastStep = this.chessSteps[len - 1]\r\n        if (len > 0 && lastStep.type === type) {\r\n            if (this.chessBoard.dropChess(lastStep.type, lastStep.row, lastStep.col)) {\r\n                this.chessSteps.splice(len - 1,1);\r\n                return true\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Game\r\n\r\nexport {\r\n    GameState\r\n}","import GameContext from \"../GameContext\";\r\nimport ChessType from \"../ChessType\";\r\n\r\nclass Player {\r\n    context!: GameContext\r\n    type!: ChessType\r\n    isComputer: boolean\r\n    constructor(isComputer: boolean) {\r\n        this.isComputer = isComputer\r\n    }\r\n    setContext(context: GameContext) {\r\n        this.context = context\r\n    }\r\n    setType(type: ChessType) {\r\n        this.type = type\r\n    }\r\n    setChess(row: number, col: number) {\r\n        if (this.context && this.type) {\r\n            return this.context.setChess(this.type, row, col)\r\n        }\r\n        return false\r\n    }\r\n\r\n    undo() {\r\n        return this.context.undo(this.type)\r\n    }\r\n}\r\n\r\nexport default Player","import Player from \"./Player\";\r\n\r\nclass Computer extends Player {\r\n    constructor() {\r\n        super(true)\r\n    }\r\n\r\n    play() {\r\n        console.log('computer play')\r\n    }\r\n}\r\n\r\nexport {\r\n    Computer\r\n}","import React from 'react'\r\nimport ChessType from \"../engine/ChessType\";\r\nimport './Chessman.less'\r\n\r\ninterface IProps {\r\n    row: number,\r\n    col: number,\r\n    size: number,\r\n    isLast: boolean\r\n    isFive: boolean\r\n    type: ChessType\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\n/**\r\n * 棋子\r\n */\r\nclass Chessman extends React.Component<IProps, IState> {\r\n\r\n    handleClick = (e: React.MouseEvent) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const { row, col, type, isFive, isLast, size } = this.props\r\n        const marginTop = (1.5 + row * 6.53) + '%'\r\n        const marginLeft = (1.5 + col * 6.53) + '%'\r\n        const className = type === ChessType.WHITE ? 'chessman white' : 'chessman'\r\n        const isLastClass = isLast ? 'lastStep' : ''\r\n        const isFiveClass = isFive ? 'fives' : ''\r\n        return (<div className={`${className} ${isLastClass} ${isFiveClass}`} style={{ marginTop, marginLeft, width: size, height: size }} onClick={this.handleClick} />)\r\n    }\r\n}\r\n\r\nexport default Chessman","import Player from \"./Player\";\r\n\r\nclass Human extends Player {\r\n    constructor() {\r\n        super(false)\r\n    }\r\n}\r\n\r\nexport {\r\n    Human\r\n}","import React from 'react'\r\nimport './Avatar.less'\r\n\r\ninterface IProps {\r\n    right?: boolean\r\n    white?: boolean\r\n    isComputer: boolean\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass Avatar extends React.Component<IProps, IState> {\r\n    render(): React.ReactNode {\r\n        const { right, white, isComputer } = this.props\r\n        const justifyContent = right ? 'flex-end': ''\r\n        const text = white ? '白棋' : '黑棋'\r\n        const player = isComputer ? '电脑' : '玩家'\r\n        const alignItems = right ? 'flex-end' : ''\r\n        const playerText = right ? `[${player}] ${text}` : `${text} [${player}]`\r\n        return <div className=\"avatar\" style={{ justifyContent }}>\r\n            <div className=\"image-wrapper\" style={{ alignItems }}>\r\n                <div className=\"image person\" />\r\n                <span className=\"text\">{playerText}</span>\r\n            </div>\r\n\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Avatar","import React from 'react'\r\nimport {Button, Toast} from 'antd-mobile'\r\nimport Game, {GameState} from \"../engine/Game\";\r\nimport './GameBoard.less'\r\nimport Chessman from \"./Chessman\";\r\nimport ChessType from \"../engine/ChessType\";\r\nimport {Human} from \"../engine/player/Human\";\r\nimport GameHandler from \"../engine/GameHandler\";\r\nimport Avatar from \"./Avatar\";\r\nimport {Computer} from \"../engine/player/Computer\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    gameState: GameState\r\n}\r\n\r\nclass GameBoard extends React.Component<IProps, IState> implements GameHandler{\r\n    game: Game\r\n    board?: HTMLDivElement| null\r\n    constructor(props: IProps) {\r\n        super(props)\r\n        this.game = new Game(this)\r\n\r\n        this.state = {\r\n            gameState: GameState.NOT_STARTED\r\n        }\r\n    }\r\n    onOver(state: GameState): void {\r\n        if (state === GameState.BLACK_WIN) {\r\n            Toast.success('黑棋胜利')\r\n        }\r\n        if (state === GameState.WHITE_WIN) {\r\n            Toast.success('白棋胜利')\r\n        }\r\n        this.setState({ gameState: state })\r\n    }\r\n\r\n    onUpdate(state: GameState): void {\r\n        this.setState({ gameState: state })\r\n    }\r\n    onStart(state: GameState): void {\r\n        this.setState({ gameState: state })\r\n    }\r\n\r\n    handleStartClick = () => {\r\n        const startGame = (humanFirst: boolean) => {\r\n            this.game.setBlackPlayer(humanFirst ? new Human() : new Computer())\r\n            this.game.setWhitePlayer(humanFirst ? new Computer() : new Human())\r\n            this.game.start()\r\n        }\r\n        // Modal.alert('开局提示', '谁先下棋', [\r\n        //     { text: '电脑先手', onPress: () => startGame(false), style: 'default' },\r\n        //     { text: '玩家先手', onPress: () => startGame(true) },\r\n        // ])\r\n        startGame(true)\r\n    }\r\n    get isStarted() {\r\n        const { gameState } = this.state\r\n        return gameState === GameState.NEXT_BLACK || gameState === GameState.NEXT_WHITE\r\n    }\r\n    handleClick = (e: React.MouseEvent) => {\r\n        if (!this.isStarted) {\r\n            Toast.info('请点击开始游戏')\r\n            return\r\n        }\r\n        if (this.board && this.isStarted) {\r\n            const y = e.clientY - this.board.offsetTop,\r\n                x = e.clientX - this.board.offsetLeft,\r\n                width = this.board.clientWidth,\r\n                offset = width * 0.044,\r\n                step = width * 0.065;\r\n            const col = Math.floor((x + offset) / step) - 1\r\n            const row = Math.floor((y + offset) / step) - 1\r\n            const player = this.game.getCurrentPlayer()\r\n            if (player && !player.isComputer) {\r\n                console.log(player)\r\n                player.setChess(row, col)\r\n            }\r\n        }\r\n    }\r\n    isLast = (row: number, col: number): boolean => {\r\n        if (this.game.chessSteps.length > 0) {\r\n            const step = this.game.chessSteps[this.game.chessSteps.length - 1]\r\n            return step.row === row && step.col === col\r\n        }\r\n        return false\r\n    }\r\n    render(): React.ReactNode {\r\n        const board = this.game.getChessBoard()\r\n        let chessMen = []\r\n        const boardSize = Math.min(document.body.clientWidth, 500) * 0.9\r\n\r\n        for(const row in board) {\r\n            for (const col in board[row]) {\r\n                const item = board[row][col]\r\n                const isLast = this.isLast(Number(row), Number(col))\r\n                if (item !== ChessType.EMPTY) {\r\n                    chessMen.push(<Chessman size={boardSize / 18} isLast={isLast} isFive={false} type={item} key={`${row}-${col}`} row={Number(row)} col={Number(col)} />)\r\n                }\r\n            }\r\n        }\r\n        return <div className=\"content\">\r\n            <Avatar isComputer={true}/>\r\n            <div ref={board => this.board = board } className=\"board\" style={{ width: boardSize, height: boardSize }} onClick={this.handleClick}>\r\n                {chessMen}\r\n            </div>\r\n            <Avatar right white isComputer={false}/>\r\n            <div>\r\n                <Button type=\"primary\" inline size=\"small\" style={{ marginRight: '4px' }} disabled={this.isStarted} onClick={this.handleStartClick}>开始游戏</Button>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default GameBoard\r\n","import React from 'react'\r\nimport { TabBar } from 'antd-mobile';\r\nimport GameBoard from \"../component/GameBoard\";\r\n\r\nclass AppLayout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTab: 'apply',\r\n      hidden: false,\r\n      fullScreen: false,\r\n    };\r\n  }\r\n\r\n  renderContent = () => {\r\n    return (\r\n      <div style={{ backgroundColor: 'white', height: '100%', width: '100%', textAlign: 'center', position: 'absolute', top: '0', display: 'flex', alignItems: 'center', justifyContent: 'center', color: 'gray' }}>\r\n        敬请期待，小哥哥正在火热开发中……\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: 'fixed', height: '100%', width: '100%', top: 0, zIndex: 1000 }}>\r\n        <TabBar\r\n          unselectedTintColor=\"#949494\"\r\n          tintColor=\"#33A3F4\"\r\n          barTintColor=\"white\"\r\n          hidden={this.state.hidden}\r\n        >\r\n          <TabBar.Item\r\n            icon={\r\n              <div style={{\r\n                width: '22px',\r\n                height: '22px',\r\n                background: 'url(https://zos.alipayobjects.com/rmsportal/psUFoAMjkCcjqtUCNPxB.svg) center center /  21px 21px no-repeat' }}\r\n              />\r\n            }\r\n            selectedIcon={\r\n              <div style={{\r\n                width: '22px',\r\n                height: '22px',\r\n                background: 'url(https://zos.alipayobjects.com/rmsportal/IIRLrXXrFAhXVdhMWgUI.svg) center center /  21px 21px no-repeat' }}\r\n              />\r\n            }\r\n            title=\"五子棋\"\r\n            key=\"Friend\"\r\n            dot\r\n            selected={this.state.selectedTab === 'greenTab'}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: 'greenTab',\r\n              });\r\n            }}\r\n          >\r\n              <GameBoard />\r\n          </TabBar.Item>\r\n          <TabBar.Item\r\n            icon={\r\n              <div style={{\r\n                width: '22px',\r\n                height: '22px',\r\n                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/BTSsmHkPsQSPTktcXyTV.svg) center center /  21px 21px no-repeat' }}\r\n              />\r\n            }\r\n            selectedIcon={\r\n              <div style={{\r\n                width: '22px',\r\n                height: '22px',\r\n                background: 'url(https://gw.alipayobjects.com/zos/rmsportal/ekLecvKBnRazVLXbWOnE.svg) center center /  21px 21px no-repeat' }}\r\n              />\r\n            }\r\n            title=\"电脑设置\"\r\n            key=\"Koubei\"\r\n            badge={'new'}\r\n            selected={this.state.selectedTab === 'redTab'}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: 'redTab',\r\n              });\r\n            }}\r\n            data-seed=\"logId1\"\r\n          >\r\n            {this.renderContent()}\r\n          </TabBar.Item>\r\n\r\n          <TabBar.Item\r\n            icon={{ uri: 'https://zos.alipayobjects.com/rmsportal/asJMfBrNqpMMlVpeInPQ.svg' }}\r\n            selectedIcon={{ uri: 'https://zos.alipayobjects.com/rmsportal/gjpzzcrPMkhfEqgbYvmN.svg' }}\r\n            title=\"我的\"\r\n            key=\"my\"\r\n            selected={this.state.selectedTab === 'yellowTab'}\r\n            onPress={() => {\r\n              this.setState({\r\n                selectedTab: 'yellowTab',\r\n              });\r\n            }}\r\n          >\r\n            {this.renderContent()}\r\n          </TabBar.Item>\r\n        </TabBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AppLayout\r\n","import React from 'react'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport AppLayout from \"./AppLayout\";\r\n\r\nconst AppRouter = () => (\r\n  <HashRouter>\r\n    <Switch>\r\n      <Route path=\"/\">\r\n        <AppLayout>\r\n        </AppLayout>\r\n      </Route>\r\n    </Switch>\r\n\r\n  </HashRouter>\r\n)\r\n\r\nexport default AppRouter\r\n\r\n","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./route\";\n\nconst App: React.FC = () => {\n  return (\n    <AppRouter />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}